name: continuous-integration/github/push

on: push

jobs:
  pyomo-linux-branch-test:
    name: ${{ matrix.TARGET }}/py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        include:
        - os: ubuntu-18.04
          TARGET: linux
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Pyomo dependencies
      run: |
        echo "Upgrade pip..."
        python -m pip install --upgrade pip
        echo ""
        echo "Install Pyomo dependencies..."
        echo ""
        pip install cython numpy scipy ipython openpyxl sympy pyyaml pyodbc networkx xlrd pandas matplotlib dill seaborn pymysql pyro4 pint pathos
        echo ""
        echo "Install CPLEX Community Edition..."
        echo ""
        pip install cplex || echo "CPLEX Community Edition is not available for ${{ matrix.python-version }}"
        echo ""
        echo "Install GAMS..."
        echo ""
        wget -q https://d37drm4t2jghv5.cloudfront.net/distributions/29.1.0/linux/linux_x64_64_sfx.exe -O gams_installer.exe
        chmod +x gams_installer.exe
        ./gams_installer.exe -q -d gams
        cd gams/*/apifiles/Python/
        py_ver=$(python -c 'import sys;print("%s%s" % sys.version_info[:2])')
        gams_ver=api
        for ver in api_*; do
            if test ${ver:4} -le $py_ver; then
                gams_ver=$ver
            fi  
        done
        cd $gams_ver
        python setup.py -q install -noCheck
    - name: Install Pyomo and extensions
      run: |
        echo "Clone Pyomo-model-libraries..."
        git clone --quiet https://github.com/Pyomo/pyomo-model-libraries.git
        echo ""
        echo "Install PyUtilib..."
        echo ""
        pip install --quiet git+https://github.com/PyUtilib/pyutilib
        echo ""
        echo "Install Pyomo..."
        echo ""
        python setup.py develop
        echo ""
        echo "Download and install extensions..."
        echo ""
        pyomo download-extensions
        pyomo build-extensions
    - name: Run nightly tests with test.pyomo
      run: |
        echo "Run test.pyomo..."
        GAMS_DIR=`ls -d1 $(pwd)/gams/*/ | head -1`
        export PATH=$PATH:$GAMS_DIR
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GAMS_DIR
        pip install nose
        test.pyomo -v --cat="nightly" pyomo `pwd`/pyomo-model-libraries
