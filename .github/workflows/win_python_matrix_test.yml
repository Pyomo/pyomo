name: (WIP) Windows Pyomo Test Workflow

on:
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: windows-latest
    strategy:
      max-parallel: 4
      matrix:
        # python-version: [2.7, 3.5, 3.6, 3.7]
        python-version: [2.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      shell: cmd
      run: |
          "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PATH%"
          python --version
          SET CONDA_INSTALL=conda install -q -y
          "SET ANACONDA=%CONDA_INSTALL% -c anaconda"
          "SET CONDAFORGE=%CONDA_INSTALL% -c conda-forge --no-update-deps"
          SET USING_MINICONDA=1
          conda config --set always_yes yes
          conda config --set auto_update_conda false
          IF NOT DEFINED USING_MINICONDA (conda install anaconda)
          "SET ADDITIONAL_CF_PKGS=setuptools pip coverage sphinx_rtd_theme"
          SET MINICONDA_EXTRAS=""
          IF DEFINED USING_MINICONDA (SET MINICONDA_EXTRAS=numpy scipy ipython openpyxl sympy pyodbc pyyaml networkx xlrd pandas matplotlib dill seaborn)
          "IF DEFINED EXTRAS (SET ADDITIONAL_CF_PKGS=%ADDITIONAL_CF_PKGS% pymysql pyro4 pint pathos %MINICONDA_EXTRAS%)"
          "SET ADDITIONAL_CF_PKGS=%ADDITIONAL_CF_PKGS% glpk ipopt"
          "%CONDAFORGE% %ADDITIONAL_CF_PKGS%"
          ps: Start-FileDownload 'https://d37drm4t2jghv5.cloudfront.net/distributions/24.8.5/windows/windows_x64_64.exe'
          windows_x64_64.exe /SP- /VERYSILENT /NORESTART /DIR=.\gams /NOICONS
          "SET PATH=%cd%\\gams;%PATH%"
          "git clone --quiet https://github.com/Pyomo/pyomo-model-libraries.git
          "python -m pip install git+https://github.com/PyUtilib/pyutilib"
          "python setup.py develop"
          "SET BUILD_DIR=%cd%"
          "SET COVERAGE_PROCESS_START=%BUILD_DIR%\\coveragerc"
          "copy %BUILD_DIR%\\.coveragerc %COVERAGE_PROCESS_START%"
          "echo data_file=%BUILD_DIR%\\.coverage >> %COVERAGE_PROCESS_START%"
          python -c "from distutils.sysconfig import get_python_lib; import os; FILE=open(os.path.join(get_python_lib(),'run_coverage_at_startup.pth'), 'w'); FILE.write('import coverage; coverage.process_startup()'); FILE.close()"
          "SET PYOMO_CONFIG_DIR=%BUILD_DIR%\\config"
          
    - name: Install extensions
      run: |
          "pyomo download-extensions"
          "glpsol -v"
          "ipopt -v"
          python --version
#     - name: Lint with flake8
#       run: |
#         pip install flake8
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run nightly tests with test.pyomo
      run: |
        "SET BUILD_DIR=%cd%"
        "SET COVERAGE_PROCESS_START=%BUILD_DIR%\\coveragerc"
        "SET PYOMO_CONFIG_DIR=%BUILD_DIR%\\config"
        "test.pyomo -v --cat="nightly" pyomo %BUILD_DIR%\\pyomo-model-libraries"
        
        
