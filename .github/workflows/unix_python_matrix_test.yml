name: continuous-integration/github/pr

on:
  pull_request:
    branches:
      - master

jobs:
  pyomo-unix-tests:
    name: ${{ matrix.TARGET }}/py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-18.04]
        include:
        - os: macos-latest
          TARGET: osx
        - os: ubuntu-18.04
          TARGET: linux
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Pyomo dependencies
      run: |
        if hash brew; then
            echo "Install pre-dependencies for pyodbc..."
            brew update
            brew list bash || brew install bash
            brew list gcc || brew install gcc
            brew link --overwrite gcc
            brew list pkg-config || brew install pkg-config
            brew list unixodbc || brew install unixodbc
            brew list freetds || brew install freetds 
        fi
        echo "Upgrade pip..."
        python -m pip install --upgrade pip
        echo ""
        echo "Install Pyomo dependencies..."
        echo ""
        # Note: pandas 1.0.3 causes gams 29.1.0 import to fail in python 3.8
        pip install cython numpy scipy ipython openpyxl sympy pyyaml pyodbc networkx xlrd pandas matplotlib dill seaborn pymysql pyro4 pint pathos
        echo ""
        echo "Install CPLEX Community Edition..."
        echo ""
        pip install cplex || echo "CPLEX Community Edition is not available for ${{ matrix.python-version }}"
        echo ""
        echo "Install GAMS..."
        echo ""
        if hash brew; then
            wget -q https://d37drm4t2jghv5.cloudfront.net/distributions/29.1.0/macosx/osx_x64_64_sfx.exe -O gams_installer.exe
        else
            wget -q https://d37drm4t2jghv5.cloudfront.net/distributions/29.1.0/linux/linux_x64_64_sfx.exe -O gams_installer.exe
        fi
        chmod +x gams_installer.exe
        ./gams_installer.exe -q -d gams
        cd gams/*/apifiles/Python/
        py_ver=$(python -c 'import sys;print("%s%s" % sys.version_info[:2])')
        gams_ver=api
        for ver in api_*; do
            if test ${ver:4} -le $py_ver; then
                gams_ver=$ver
            fi  
        done
        cd $gams_ver
        python setup.py -q install -noCheck
    - name: Install Pyomo and extensions
      run: |
        echo "Clone Pyomo-model-libraries..."
        git clone --quiet https://github.com/Pyomo/pyomo-model-libraries.git
        echo ""
        echo "Install PyUtilib..."
        echo ""
        pip install --quiet git+https://github.com/PyUtilib/pyutilib
        echo ""
        echo "Install Pyomo..."
        echo ""
        python setup.py develop
        echo ""
        echo "Download and install extensions..."
        echo ""
        pyomo download-extensions
        pyomo build-extensions
    - name: Run nightly tests with test.pyomo
      run: |
        echo "Run test.pyomo..."
        GAMS_DIR=`ls -d1 $(pwd)/gams/*/ | head -1`
        export PATH=$PATH:$GAMS_DIR
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GAMS_DIR
        export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:$GAMS_DIR
        pip install nose
        test.pyomo -v --cat="nightly" pyomo `pwd`/pyomo-model-libraries
