driver: pyomo.test_solvers

solvers:
    cbc:
    cbc_asl:
        name: cbc
        solver_io: nl
    #
    coliny:
        name: 'asl:coliny'
    #
    cplex:
    cplex_asl:
        name: cplex
        solver_io: nl
    cplex_direct:
        name: cplex
        solver_io: python
    #
    glpk:
    glpk_direct:
        name: glpk
        solver_io: python
    glpk_openopt:
        name: 'openopt:glpk'
    #
    ipopt:
        name: 'ipopt'
    #
    pico:
    pico_asl:
        name: pico
        solver_io: nl
    #
    gurobi:
    gurobi_asl:
        name: gurobi
        solver_io: nl
    gurobi_direct:
        name: gurobi
        solver_io: python
    #
    ralg:
        name: 'openopt:ralg'
    #
    amsg2p:
        name: 'openopt:amsg2p'
    #
    scipy_lbfgsb:
        name: 'openopt:scipy_lbfgsb'
    #
    scipy_tnc:
        name: 'openopt:scipy_tnc'
    #
    bobyqa:
        name: 'openopt:bobyqa'
    #
    interalg:
        name: 'openopt:interalg'
    #
    scipy_cobyla:
        name: 'openopt:scipy_cobyla'
    #
    scipy_slsqp:
        name: 'openopt:scipy_slsqp'
    #
    sqlcp:
        name: 'openopt:sqlcp'
    #
    gsubg:
        name: 'openopt:gsubg'
    #
    lincher:
        name: 'openopt:lincher'
    #
    de:
        name: 'openopt:de'
    #
    galileo:
        name: 'openopt:galileo'
    #
    pswarm:
        name: 'openopt:pswarm'

problems:
    diet1:
        files:      diet1.py diet1.dat
        baseline:   diet1.yml
        tests:      lp_feasible lp_bounds
    lp_unique1:
        files:      lp_unique1.py
        baseline:   lp_unique1.yml
        tests:      lp_feasible lp_unique_dual lp_bounds
    lp_basic:
        files:      lp_basic.py
        baseline:   lp_basic.yml
        tests:      lp_feasible lp_bounds
    simple1a:
        files:      simple1a.py
        baseline:   simple1a.yml
        tests:      lp_feasible lp_bounds
    simple1b:
        files:      simple1b.py
        baseline:   simple1b.yml
        tests:      lp_feasible lp_bounds
    infeasible1a:
        files:      infeasible1a.py
        tests:      lp_infeasible
    infeasible1b:
        files:      infeasible1b.py
        tests:      lp_infeasible
    unbounded1a:
        files:      unbounded1a.py
        tests:      lp_unbounded
    unbounded1b:
        files:      unbounded1b.py
        tests:      lp_unbounded
    constant1a:
        files:      constant1a.py
        baseline:   constant1a.yml
        tests:      lp_constant lp_bounds
    constant1b:
        files:      constant1b.py
        baseline:   constant1b.yml
        tests:      lp_constant lp_bounds
    mip_infeasible1a:
        files:      mip_infeasible1a.py
        tests:      mip_infeasible
    mip_unique1:
        files:      mip_unique1.py
        baseline:   mip_unique1.yml
        tests:      mip_feasible mip_unique
    mip_unbounded1a:
        files:      mip_unbounded1a.py
        tests:      mip_unbounded
    mip_constant1a:
        files:      mip_constant1a.py
        baseline:   mip_constant1a.yml
        tests:      mip_constant
    sos1:
        files:      sos1.py
        baseline:   sos1.yml
        tests:      mip_feasible mip_unique
    sos2:
        files:      sos2.py
        baseline:   sos2.yml
        tests:      mip_feasible mip_unique
    multidimen_sos1:
        files:      multidimen_sos1.py
        baseline:   multidimen_sos1.yml
        tests:      mip_feasible mip_unique
    multidimen_sos2:
        files:      multidimen_sos2.py
        baseline:   multidimen_sos2.yml
        tests:      mip_feasible mip_unique
    

suites:

    mip:
        solvers:
            cbc:
            cbc_asl:
            cplex:
            cplex_asl:
            cplex_direct:
            glpk:
            glpk_direct:
            glpk_openopt:
            pico:
            pico_asl:
            gurobi:
            gurobi_direct:
        problems:
            mip_unbounded1a:
            mip_unique1:
            mip_infeasible1a:
            mip_constant1a:
            sos1:
            sos2:
            multidimen_sos1:
            multidimen_sos2:

    lp:
        solvers:
            cbc:
            cbc_asl:
            cplex:
            cplex_asl:
            cplex_direct:
            glpk:
            glpk_direct:
            glpk_openopt:
            pico:
            pico_asl:
            gurobi:
            gurobi_direct:
        problems:
            diet1:
                abstol: 1e-5
            lp_unique1:
            lp_basic:
            simple1a:
            simple1b:
            infeasible1a:
            infeasible1b:
            unbounded1a:
            unbounded1b:
            constant1a:
            constant1b:

    lp_convex:
        solvers:
            ipopt:
            ralg:
        problems:
            diet1:
                abstol:     1e-5
                tests:      lp_feasible
            infeasible1a:
                tests:      lp_infeasible
            infeasible1b:
                tests:      lp_infeasible
            unbounded1a:
                tests:      lp_unbounded
            unbounded1b:
                tests:      lp_unbounded
            constant1a:
                tests:      lp_constant
            constant1b:
                tests:      lp_constant
   
    lp_other:
        solvers:
            ralg:
            amsg2p:
            scipy_lbfgsb:
            scipy_tnc:
            interalg:
            scipy_cobyla:
            scipy_slsqp:
            sqlcp:
            gsubg:
            lincher:
            de:
            galileo:
            pswarm:
        problems:
            simple1a:
                tests:      lp_feasible
            simple1b:
                tests:      lp_feasible

