environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    - PYTHON_VERSION: 2.7
      #PYTHON: "C:\\Python27"
      PYTHON: "C:\\Miniconda-x64"
      CATEGORY: "nightly"

    - PYTHON_VERSION: 3.4
      #PYTHON: "C:\\Python34"
      PYTHON: "C:\\Miniconda3-x64"
      CATEGORY: "nightly"

    - PYTHON_VERSION: 3.5
      #PYTHON: "C:\\Python35"
      PYTHON: "C:\\Miniconda35-x64"
      CATEGORY: "nightly"

    - PYTHON_VERSION: 3.6
      #PYTHON: "C:\\Python36"
      PYTHON: "C:\\Miniconda36-x64"
      CATEGORY: "nightly"

    - PYTHON_VERSION: 2.7
      #PYTHON: "C:\\Python27"
      PYTHON: "C:\\Miniconda-x64"
      CATEGORY: "nightly"
      EXTRAS: YES

    - PYTHON_VERSION: 3.6
      #PYTHON: "C:\\Python36"
      PYTHON: "C:\\Miniconda36-x64"
      CATEGORY: "nightly"
      EXTRAS: YES


    ##- PYTHON: "C:\\Python33"
    #- PYTHON: "C:\\Python34"
    #- PYTHON: "C:\\Python27-x64"
    ##- PYTHON: "C:\\Python33-x64"
    ##  DISTUTILS_USE_SDK: "1"
    #- PYTHON: "C:\\Python34-x64"
    #  DISTUTILS_USE_SDK: "1"
    #- PYTHON: "C:\\Python35-x64"

install:
  # We need wheel installed to build wheels
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PATH%"
  - python --version
  - conda install -q -y --channel conda-forge setuptools
  - "IF %PYTHON_VERSION%==2.6 (python -m pip install ordereddict)"
  - python -m pip install coverage
  - IF DEFINED YAML (python -m pip install pyyaml)
  - "IF DEFINED PYRO (python -m pip install %PYRO%)"
  - python -m pip install xlrd
  - python -m pip install openpyxl
  - python -m pip install sphinx_rtd_theme
  - "IF NOT %PYTHON_VERSION%==2.6 (conda install -q -y -c anaconda scipy)"
  #
  - IF DEFINED EXTRAS (conda install -q -y --channel conda-forge pyomo.extras)
  #
  - "conda install -q -y --channel conda-forge glpk"
  - "glpsol -v"
  # NOTE: conda-forge doesn't build ipopt for Windows....
  #- "conda install -q -y --channel conda-forge --no-update-dependencies ipopt"
  - "conda install -q -y --channel cachemeorg ipopt_bin"
  - "ipopt -v"
  #
  # Clone but don't install pyomo-model-libraries
  #
  - "cd /d .. && git clone https://github.com/Pyomo/pyomo-model-libraries.git && cd /d pyomo"
  - "python -m pip install git+https://github.com/PyUtilib/pyutilib"
  - "python setup.py develop"
  - "dir %PYTHON%\\Scripts"

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  - "test.pyomo --cat=%CATEGORY% --cov -v"

#after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  #- "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"

#artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  #- path: dist\*

on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.
  - pip install codecov
  - codecov
